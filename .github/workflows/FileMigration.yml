name: Sync Migrations from Test to Demo

on:
  push:
    branches:
      - test  # Se ejecuta cuando hay un push en la rama "test"

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Obtener todo el historial para poder comparar ramas

      - name: Configure Git user
        run: |
          git config --global user.name "kravmaga95"
          git config --global user.email "edwardsalex8034@gmail.com"

      - name: Authenticate Git
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/Kravmaga95/DevOpsPruebas.git

      - name: Switch to test branch
        run: |
          git checkout test
          git pull origin test

      - name: Copy migration files to temp folder
        run: |
          if [ -d "migrations" ]; then
            mkdir -p /tmp/migrations_backup
            cp -r migrations/* /tmp/migrations_backup/ || echo "No files to copy."
          else
            echo "No migrations folder found, skipping."
          fi

      - name: Switch to demo branch
        run: |
          git fetch origin demo  # Asegurar que la rama demo está actualizada
          git checkout demo || git checkout -b demo origin/demo
          git pull origin demo  # Traer los cambios más recientes

      - name: Sync migrations folder
        run: |
          if [ -d "/tmp/migrations_backup" ] && [ "$(ls -A /tmp/migrations_backup)" ]; then
            rsync -av --ignore-existing /tmp/migrations_backup/ migrations/
          else
            echo "No migration files to sync, skipping."
          fi

      - name: Commit and push changes
        run: |
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Sync new migration files from test to demo"
            git push origin demo
          fi
