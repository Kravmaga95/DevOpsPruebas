name: Sync Migrations from Test to Demo

on:
  push:
    branches:
      - test  # Se ejecuta cuando hay un push en la rama "test"

permissions:
  contents: write  # Permiso para escribir en el repo

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Obtener todo el historial para comparaci√≥n

      - name: Configure Git user
        run: |
          git config --global user.name "kravmaga95"
          git config --global user.email "edwardsalex8034@gmail.com"

      - name: Authenticate Git
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Ensure test branch is up-to-date
        run: |
          git checkout test
          git pull --ff-only origin test || { echo "Error pulling test branch"; exit 1; }

      - name: Backup migration files
        run: |
          if [ -d "migrations" ] && [ "$(ls -A migrations)" ]; then
            mkdir -p /tmp/migrations_backup
            rsync -av migrations/ /tmp/migrations_backup/
          else
            echo "No migrations found, skipping backup."
          fi

      - name: Switch to demo branch
        run: |
          git fetch origin demo
          git checkout -B demo origin/demo || git checkout -b demo
          git pull --ff-only origin demo || { echo "Error pulling demo branch"; exit 1; }

      - name: Ensure migrations folder exists in demo
        run: |
          mkdir -p migrations  # Crea la carpeta si no existe

      - name: Sync migration files
        run: |
          if [ -d "/tmp/migrations_backup" ] && [ "$(ls -A /tmp/migrations_backup)" ]; then
            rsync -av --delete /tmp/migrations_backup/ migrations/
          else
            echo "No migration files to sync, skipping."
          fi

      - name: Commit and push changes
        run: |
          git add -A  # Asegura que se agreguen todos los cambios
          if git diff --cached --quiet; then
            echo "No changes detected, skipping commit."
          else
            git commit -m "Sync migration files from test to demo"
            git push origin demo || { echo "Push failed"; exit 1; }
          fi
